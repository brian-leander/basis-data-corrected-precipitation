package dk.dmi.lib.db;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Timestamp;import java.time.ZonedDateTime;import java.util.TreeMap;/** * Class containing methods for accessing ClimaDB in order to save the amount of * connections etc. * */public class StatDBParameter extends Database {    /**     * Constructor by default it connects to ClimaDB with Clipac settings     */    public StatDBParameter() {        super("nanoqT.dmi.dk:5432/statdb_parameter", "thn", "thndmi", Database.POSTGRES);    }    /**     * Constructor which can connect to ClimaDB with settings provided as     * arguments     *     * @param serverName server name. eg. nanow.dmi.dk:5432     * @param databaseName database name. eg. climadb     * @param userName user name. eg. kev     * @param password password. eg. pass     */    public StatDBParameter(String serverName, String databaseName, String userName, String password) {        super(serverName + "/" + databaseName, userName, password, Database.POSTGRES);    }    /**     * Returns all stat types     *     * @param date     * @return     */    public TreeMap<Integer, String> getStatTypes(ZonedDateTime date) {       TreeMap<Integer, String> map = new TreeMap<>();        try {            String sel = "SELECT statid, obs_code from stat_obs_code " +                    "WHERE first_date <= ? " +                    "AND (last_date >= ? or last_date is null) " +                    "AND obs_code IN ('pluvio' , 'geonor', 'PSVK', 'rimco') " +                    "AND (statid%100 = 20 OR statid between 601500 and 620000)";            PreparedStatement ps = getConnection().prepareStatement(sel);            ps.setTimestamp(1, new Timestamp(date.toInstant().toEpochMilli()));            ps.setTimestamp(2, new Timestamp(date.toInstant().toEpochMilli()));            ResultSet r = ps.executeQuery();            while (r.next()) {                int statid = r.getInt("statid");                String type = r.getString("obs_code");                map.put(statid, type);            }        } catch (SQLException sqlex) {            sqlex.printStackTrace();        } catch (Exception ex) {            ex.printStackTrace();        }        return map;    }}